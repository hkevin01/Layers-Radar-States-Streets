name: Comprehensive Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info

  playwright-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npm run test:playwright
      env:
        CI: true
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: tests/reports/playwright/
        retention-days: 30

  cypress-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        start: npm run start:8082
        wait-on: 'http://127.0.0.1:8082'
        config-file: cypress.config.js
      env:
        CI: true
    
    - name: Upload Cypress artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-artifacts
        path: |
          tests/reports/cypress/screenshots/
          tests/reports/cypress/videos/
        retention-days: 30

  selenium-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest
    
    - name: Setup Firefox
      uses: browser-actions/setup-firefox@latest
    
    - name: Start server
      run: npm run start:8082 &
      
    - name: Wait for server
      run: npx wait-on http://127.0.0.1:8082
    
    - name: Run Selenium tests
      run: npm run test:selenium
      env:
        CI: true
    
    - name: Upload Selenium screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: selenium-screenshots
        path: tests/screenshots/
        retention-days: 30

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
    
    - name: Start server
      run: npm run start:8082 &
      
    - name: Wait for server
      run: npx wait-on http://127.0.0.1:8082
    
    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  integration-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests, playwright-tests, cypress-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Generate test report
      run: npm run test:report
    
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: tests/reports/
        retention-days: 30
